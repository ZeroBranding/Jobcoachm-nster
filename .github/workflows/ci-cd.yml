name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    name: Lint & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: ESLint
        run: |
          npm run lint
      - name: Unit Tests
        run: |
          npm run test:unit || echo "No unit tests yet"
      - name: Install browsers for Playwright
        run: npx playwright install --with-deps
      - name: E2E Tests (Playwright)
        run: npm run test:e2e

  security-scan:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: NPM Audit
        run: |
          npm audit --audit-level=high
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@0.19.0
        with:
          scan-type: 'fs'
          severity: 'HIGH,CRITICAL'
          exit-code: 1

  build-and-push:
    name: Build & Push Image
    needs: security-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://jobcoach.example.com
    steps:
      - name: Deploy via SSH (K8s)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            kubectl set image deployment/jobcoach web=ghcr.io/${{ github.repository }}:${{ github.sha }} -n jobcoach
      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/jobcoach -n jobcoach --timeout=120s
      - name: Rollback if failed
        if: failure()
        run: |
          kubectl rollout undo deployment/jobcoach -n jobcoach