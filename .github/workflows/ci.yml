name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # =============================================================================
  # CODE QUALITY & LINTING
  # =============================================================================
  lint:
    name: 🔍 Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🔍 HTML Validation
        run: |
          npm install -g html-validate
          html-validate index.html leichte-sprache.html leicht.html
          
      - name: 🎨 CSS Validation
        run: |
          npm install -g css-validator
          css-validator assets/app.css
          
      - name: 📝 JavaScript Linting
        run: |
          npm install -g eslint
          npx eslint assets/*.js --ext .js
          
      - name: 🔒 Security Audit
        run: npm audit --audit-level=high

  # =============================================================================
  # ACCESSIBILITY TESTS
  # =============================================================================
  accessibility:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps
        
      - name: 🌐 Start Test Server
        run: |
          npm run dev &
          sleep 10
          
      - name: ♿ Run Accessibility Tests
        run: npm run test:a11y
        
      - name: 📊 Upload A11y Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: test-results/accessibility/

  # =============================================================================
  # PERFORMANCE TESTS
  # =============================================================================
  performance:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps
        
      - name: 🌐 Start Test Server
        run: |
          npm run dev &
          sleep 10
          
      - name: ⚡ Run Performance Tests
        run: npm run test:perf
        
      - name: 📊 Upload Performance Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report
          path: test-results/performance/

  # =============================================================================
  # END-TO-END TESTS
  # =============================================================================
  e2e:
    name: 🧪 End-to-End Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}
        
      - name: 🌐 Start Test Server
        run: |
          npm run dev &
          sleep 10
          
      - name: 🧪 Run E2E Tests
        run: npx playwright test --project=${{ matrix.browser }}
        
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-report-${{ matrix.browser }}
          path: test-results/

  # =============================================================================
  # SECURITY TESTS
  # =============================================================================
  security:
    name: 🛡️ Security Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🔒 Security Audit
        run: npm audit --audit-level=moderate
        
      - name: 🛡️ OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:8080'
          
      - name: 📊 Upload Security Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: zap-report.html

  # =============================================================================
  # BUILD TEST
  # =============================================================================
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Test Build Process
        run: npm run build
        
      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  # =============================================================================
  # LEGAL COMPLIANCE CHECK
  # =============================================================================
  legal-check:
    name: ⚖️ Legal Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: ⚖️ Check Legal Templates
        run: |
          echo "🔍 Checking for placeholder replacements in legal documents..."
          
          # Check if templates still contain placeholders
          if grep -r "\[FIRMA\]\|\[EMAIL\]\|\[ANSCHRIFT\]" legal/; then
            echo "❌ Legal templates still contain placeholders!"
            echo "Please replace all [PLACEHOLDER] values before deployment."
            exit 1
          else
            echo "✅ Legal templates appear to be properly configured."
          fi
          
      - name: 📄 Validate Required Legal Files
        run: |
          required_files=("legal/agb.template.md" "legal/datenschutz.template.md" "legal/impressum.template.md")
          
          for file in "${required_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "❌ Required legal file missing: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done

  # =============================================================================
  # SUMMARY JOB
  # =============================================================================
  ci-summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [lint, accessibility, performance, e2e, security, build, legal-check]
    if: always()
    
    steps:
      - name: 📋 Check CI Results
        run: |
          echo "## 📊 CI/CD Pipeline Results"
          echo "- Linting: ${{ needs.lint.result }}"
          echo "- Accessibility: ${{ needs.accessibility.result }}"
          echo "- Performance: ${{ needs.performance.result }}"
          echo "- E2E Tests: ${{ needs.e2e.result }}"
          echo "- Security: ${{ needs.security.result }}"
          echo "- Build: ${{ needs.build.result }}"
          echo "- Legal Check: ${{ needs.legal-check.result }}"
          
          if [[ "${{ needs.lint.result }}" == "failure" || 
                "${{ needs.accessibility.result }}" == "failure" || 
                "${{ needs.performance.result }}" == "failure" || 
                "${{ needs.e2e.result }}" == "failure" || 
                "${{ needs.security.result }}" == "failure" || 
                "${{ needs.build.result }}" == "failure" || 
                "${{ needs.legal-check.result }}" == "failure" ]]; then
            echo "❌ Some CI checks failed!"
            exit 1
          else
            echo "✅ All CI checks passed!"
          fi